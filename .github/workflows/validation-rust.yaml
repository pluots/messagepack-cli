---

on:
  push:
    branches:
    - main
  pull_request:

name: Rust Validation

env:
  RUSTDOCFLAGS: -D warnings
  RUSTFLAGS: "-D warnings"
  CARGO_UNSTABLE_SPARSE_REGISTRY: true
  TARGET_DIR: ./target

jobs:
  check_test:
    strategy:
      fail-fast: true
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin
            extension: ''
          - build: windows-msvc
            os: windows-latest
            target: x86_64-pc-windows-msvc

    name: "Check and test on ${{ matrix.os }} (cargo check & cargo test)"
    runs-on: ${{ matrix.os }}
    env:
      MAKE_DIST: "1"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Run check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features --all-targets
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
      - name: Test make
        if: matrix.os != 'windows-latest'
        run: |
          cargo_outdir="$(find target -name msgpack-stamp -print0 | xargs -0 ls -t | head -n1 | xargs dirname)"
          echo outdir: "$cargo_outdir"
          
          mkdir testdir testdir/completion testdir/doc
          sh dist/create_install_makefile.sh
          mv Makefile.dist testdir/Makefile
          mv "$cargo_outdir"/msgpack.1 testdir/doc
          mv "$cargo_outdir"/* testdir/completion
          mv target/debug/msgpack testdir
          cd testdir

          echo running make install
          sudo make install

          echo testing files
          echo testing msgpack presence
          test -f /usr/local/bin/msgpack
          echo testing msgpack.1 presence
          test -f /usr/local/share/man/man1/msgpack.1

          if [ "{{ matrix.os }}" = "ubuntu-latest" ]; then
            echo testing msgpack.bash presence
            test -f /usr/share/bash-completion/completions/msgpack.bash
          fi
          
          echo running make uninstall
          sudo make uninstall
          
          echo testing files
          echo testing msgpack presence
          test ! -f /usr/local/bin/msgpack
          echo testing msgpack.1 presence
          test ! -f /usr/local/share/man/man1/msgpack.1

          if [ "{{ matrix.os }}" = "ubuntu-latest" ]; then
            echo testing msgpack.bash presence
            test ! -f /usr/share/bash-completion/completions/msgpack.bash
          fi

  fmt:
    name: "Format (cargo fmt)"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: "Clippy (cargo clippy)"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          # Some nice checks are only nightly
          toolchain: nightly
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features --all-targets -- -D warnings

  doc:
    name: "Docs (cargo doc)"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --document-private-items
